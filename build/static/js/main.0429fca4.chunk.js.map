{"version":3,"sources":["services/RealtimeDatabase.jsx","components/CheckIn.jsx","components/Home.jsx","components/Users.jsx","hooks/input-hook.js","components/Login.jsx","components/AddUsers.jsx","components/ProminentAppBar.jsx","components/AddUsersAppBar.jsx","serviceWorker.js","index.js","App.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","IP_ADDRESS","ip","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","paddingBottom","CheckIn","CheckInData","classes","document","title","List","className","map","_key","check_in","check_out","check_user","work_list","ListItem","ListItemAvatar","Avatar","ListItemText","style","minWidth","primary","moment","toNow","secondary","format","replace","diff","Home","useState","userCheckData","setCheckUserData","fetchIP","setFetchIP","history","useHistory","fetch","then","e","json","useEffect","ref","child","localStorage","getItem","orderByValue","on","snapshot","array","forEach","el","push","val","setInterval","go","Container","reverse","FirestoreService","find","Button","type","fullWidth","variant","color","onClick","bottom","position","updates","list","update","user","newKey","key","flexGrow","padding","spacing","margin","image","height","img","display","maxHeight","Users","userData","setUserData","Grid","container","fristname","lastname","username","password","item","sm","md","lg","Paper","ButtonBase","alt","src","direction","Typography","gutterBottom","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","Copyright","align","Link","href","Date","getFullYear","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","alignItems","avatar","form","marginTop","submit","Login","bindUsername","resetUsername","bindPassword","resetPassword","onSubmitLogin","data","a","setItem","JSON","stringify","alert","component","CssBaseline","xs","elevation","square","onSubmit","noValidate","TextField","required","id","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Box","mt","AddUsers","firstname","bindFirstname","resetFirstname","bindLastname","resetLastname","photo","bindPhoto","resetPhoto","defaultValue","placeholder","menuButton","marginRight","toolbar","minHeight","paddingTop","alignSelf","ProminentAppBar","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","clear","AddUsersAppBar","Boolean","window","location","hostname","match","ReactDOM","render","path","getElementById","error","reload","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0429fca4.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport 'firebase/database'\nimport moment from \"moment\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDYHgcGjAglCjsex4BjI9cFFR-KaGG2Ras\",\n    authDomain: \"ufa66-checkin.firebaseapp.com\",\n    databaseURL: \"https://ufa66-checkin.firebaseio.com\",\n    projectId: \"ufa66-checkin\",\n    storageBucket: \"ufa66-checkin.appspot.com\",\n    messagingSenderId: \"1073662313747\",\n    appId: \"1:1073662313747:web:3fbf437025e180f31186e6\",\n    measurementId: \"G-ZGTDDBZWCQ\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.database();\n\nexport const getUsers = () => {\n    return db.ref('tb_user')\n};\n\nexport const getUsersLogin = (user, pass) => {\n    return db.ref('tb_user')\n};\n\nexport const getCheckInUsers = (user, pass) => {\n    return db.ref('tb_check').child(localStorage.getItem('login__key'))\n};\n\nexport const setCheckIn = (user = localStorage.getItem('login_username'), pass = localStorage.getItem('login_password')) => {\n    let newKey = db.ref().child(`tb_check/${localStorage.getItem('login__key')}`).push().key;\n    let updates = {};\n    const list = {\n        \"_key\": newKey,\n        \"check_in\": moment().format(),\n        \"check_out\": \"\",\n        \"check_user\": user,\n        \"work_list\": \"Morning job\"\n    }\n    updates[`/tb_check/${localStorage.getItem('login__key')}/` + newKey] = list;\n    return db.ref().update(updates)\n};\n\nexport const setCheckOut = (e) => {    \n    let updates = {};\n    const list = {\n        \"_key\": e._key,\n        \"check_in\": e.check_in,\n        \"check_out\": moment().format(),\n        \"check_user\": e.check_user,\n        \"work_list\": e.work_list\n    }\n    updates[`/tb_check/${localStorage.getItem('login__key')}/` + e._key ] = list;\n    return db.ref().update(updates)\n};\n\nexport const addUsers = (username = '', password = '', lastname = '', img = '', fristname = '') => {\n    let newKey = db.ref().child(`tb_user`).push().key;\n    let updates = {};\n    const list = {\n        \"_key\": newKey,\n        \"fristname\": fristname,\n        \"img\": img || 'https://f0.pngfuel.com/png/980/886/male-portrait-avatar-png-clip-art.png',\n        \"lastname\": lastname,\n        \"password\": password,\n        \"username\": username\n    }\n    updates[`/tb_user/` + newKey] = list;\n    return db.ref().update(updates)\n};\n\n\nexport const fetchIP = () => {\n   return fetch('https://api.ipify.org/?format=json').then((e) => e.json()).then(e => (e.ip))\n}\n\nexport const IP_ADDRESS = [{ip: '124.122.16.16'}, {ip: '183.89.70.85'}, {ip: '203.156.121.130'}]","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport WorkIcon from '@material-ui/icons/Work';\nimport moment from \"moment\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        paddingBottom: '50px'\n    },\n}));\nexport default function CheckIn({ CheckInData }) {\n    const classes = useStyles();\n    document.title = 'Work To Day | Users';\n    return (\n        <List className={classes.root}>\n            {CheckInData?.map(({ _key, check_in, check_out, check_user, work_list }) => (\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <WorkIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText style={{ minWidth: 'fit-content' }} primary={\"Time's \" + moment(check_in).toNow()} secondary={<>Check In At: {moment(check_in).format('LL HH:mm:ss')}<br />\n                    Check Out At: {moment(check_out).format('LL HH:mm:ss').replace('Invalid date', '-')}<br/>\n                    Time's {moment(check_out).diff(moment(check_in), 'hour') || '00'}:{moment(check_out).diff(moment(check_in), 'minute') || '00'}:{moment(check_out).diff(moment(check_in), 'second') || '00'}\n                    </>} />\n                </ListItem>\n            ))}\n        </List>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport * as FirestoreService from '../services/RealtimeDatabase';\nimport { Button, Container } from \"@material-ui/core\";\nimport CheckIn from \"./CheckIn\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Home() {\n    document.title = 'Work To Day';\n    const [userCheckData, setCheckUserData] = useState([])\n    const [fetchIP, setFetchIP] = useState([])\n    const history = useHistory();\n    const onCheckIn = () => {\n        FirestoreService.setCheckIn()\n    }\n    const onCheckOut = () => {\n        FirestoreService.setCheckOut(userCheckData?.[0])\n    }\n    FirestoreService.fetchIP().then(e => setFetchIP(e))\n\n    useEffect(() => {\n        FirestoreService.getCheckInUsers().orderByValue().on(\"value\", snapshot => {\n            const array = [];\n            // For each data in the entry\n            snapshot.forEach(el => {\n                // Push the object to the array\n                // If you also need to store the unique key from firebase,\n                // You can use array.push({ ...el.val(), key: el.key });\n                array.push(el.val());\n            });\n            setCheckUserData(array);\n        });\n    }, [])\n\n    setInterval(() => {\n        history.go()\n    }, 30000);\n\n    return (\n        <>\n            <br />\n            <Container>\n                <CheckIn CheckInData={userCheckData.reverse()} />\n            </Container>\n\n            {!FirestoreService.IP_ADDRESS.find(({ip}) => ip === fetchIP)?.ip ? <p></p> : userCheckData?.[0]?.check_in && moment().diff(moment(userCheckData?.[0]?.check_in), 'second') < 10 ?\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => history.go()}\n                    style={{ bottom: 0, position: 'fixed' }}\n                >\n                    Warnning\n                </Button> :\n                userCheckData?.[0]?.check_in && !userCheckData?.[0]?.check_out ? <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={onCheckOut}\n                    style={{ bottom: 0, position: 'fixed' }}\n                >\n                    Check Out\n                </Button> : <Button\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={onCheckIn}\n                        style={{ bottom: 0, position: 'fixed' }}\n                    >\n                        Check In\n                </Button>\n            }\n\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nimport * as FirestoreService from '../services/RealtimeDatabase';\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 220,\n    height: 220,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Users() {\n  const classes = useStyles();\n  const [userData, setUserData] = useState([])\n  document.title = 'Work To Day | Users';\n  useEffect(() => {\n    FirestoreService.getUsers().on(\"value\", snapshot => {\n      const array = [];\n      // For each data in the entry\n      snapshot.forEach(el => {\n        // Push the object to the array\n        // If you also need to store the unique key from firebase,\n        // You can use array.push({ ...el.val(), key: el.key });\n        array.push(el.val());\n      });\n      setUserData(array);\n    });\n  }, [])\n  return (\n    <Container>\n      <div className={classes.root}>\n        <center><h3>Users</h3></center>\n        <Grid container spacing={3}>\n          {userData?.map(({ _key, fristname, img, lastname, password, username }) => (\n\n            <Grid item sm={6} md={4} lg={3} container>\n              <Paper className={classes.paper}>\n                <Grid spacing={6}>\n                  <Grid item>\n                    <ButtonBase className={classes.image}>\n                      <img className={classes.img} alt=\"complex\" src={img} />\n                    </ButtonBase>\n                  </Grid>\n                  <Grid item sm={12} lg container>\n                    <Grid item sm container direction=\"column\" spacing={3}>\n                      <Grid item sm>\n                        <Typography gutterBottom variant=\"subtitle1\">\n                          {fristname} {lastname}\n                        </Typography>\n                        <Typography variant=\"body2\" gutterBottom>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          ID: {username}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n\n    </Container>\n  );\n}","import { useState } from \"react\";\n\nexport const useInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(''),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport * as FirestoreService from '../services/RealtimeDatabase';\nimport { useInput } from \"../hooks/input-hook\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"#\">\n                Check In / Out\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      width: \"300px\",\n      height: \"300px\"\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const { value: username, bind: bindUsername, reset: resetUsername } = useInput('');\n    const { value: password, bind: bindPassword, reset: resetPassword } = useInput('');\n\n    const history = useHistory();\n    const onSubmitLogin = () => FirestoreService.getUsersLogin().on('child_added', async function (data) {\n        if (username === data.val().username && password === data.val().password) {\n            resetUsername()\n            resetPassword()\n            if (data) {\n                await localStorage.setItem('login_check', true)\n                await localStorage.setItem('login_data', JSON.stringify(data.val()))\n                await localStorage.setItem('login__key', data.val()._key)\n                await localStorage.setItem('login_username', username)\n                await localStorage.setItem('login_password', password)\n                await history.push('home')\n            } else {\n                alert('Error')\n            }\n        }\n    });\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar\n                        src=\"logo512.png\"\n                        className={classes.avatar}\n                    />\n                    <form className={classes.form} onSubmit={onSubmitLogin} noValidate>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            {...bindUsername}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            {...bindPassword}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={onSubmitLogin}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link onClick={() => history.push('addusers')} href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link onClick={() => history.push('addusers')} variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright />\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","import React from \"react\";\nimport { TextField, Container, Grid, Button } from \"@material-ui/core\";\nimport { useInput } from \"../hooks/input-hook\";\nimport * as FirestoreService from '../services/RealtimeDatabase';\nimport Users from \"./Users\";\n\nexport default function AddUsers() {\n    document.title = 'Work To Day | Add Users';\n    const { value: username, bind: bindUsername, reset: resetUsername } = useInput('');\n    const { value: password, bind: bindPassword, reset: resetPassword } = useInput('');\n    const { value: firstname, bind: bindFirstname, reset: resetFirstname } = useInput('');\n    const { value: lastname, bind: bindLastname, reset: resetLastname } = useInput('');\n    const { value: photo, bind: bindPhoto, reset: resetPhoto } = useInput('');\n    const addUsers = () => {\n        FirestoreService.addUsers(username, password, lastname, photo, firstname)\n        resetUsername()\n        resetPassword()\n        resetFirstname()\n        resetLastname()\n        resetPhoto()\n    }\n    return (\n        <>\n            <Container>\n                <h2>AddUsers</h2>\n                <form>\n                    <Grid container lg={12} spacing={3}>\n                        <Grid item xs={12} sm={4} md={2}>\n                            <TextField required defaultValue={username} label=\"Username\" fullWidth {...bindUsername} />\n                        </Grid>\n                        <Grid item xs={12} sm={4} md={2}>\n                            <TextField required defaultValue={password} label=\"Password\" fullWidth type=\"password\" {...bindPassword} />\n                        </Grid>\n                    </Grid>\n                    <Grid container xs={12} md={12} spacing={3}>\n                        <Grid item xs={12} sm={6} md={2}>\n                            <TextField required defaultValue={firstname} label=\"Firstname\" fullWidth {...bindFirstname} />\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={2}>\n                            <TextField required defaultValue={lastname} label=\"Lastname\" fullWidth {...bindLastname} />\n                        </Grid>\n                        <Grid item xs={12} md={12}>\n                            <TextField required defaultValue={photo} label=\"Photo\" placeholder=\"www.img.com\" fullWidth {...bindPhoto} />\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <Grid item lg={12}>\n                        {username && password && firstname && lastname ?\n                            <Button type=\"button\" fullWidth variant=\"contained\" color=\"primary\" onClick={addUsers}>เพิ่มข้อมูล</Button>\n                            : <Button type=\"button\" fullWidth variant=\"contained\" color=\"secondary\">เพิ่มข้อมูล</Button>\n                        }\n                    </Grid>\n                </form>\n                <Users />\n            </Container>\n        </>\n    );\n}","import React, { useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useHistory } from 'react-router-dom';\n// import HomeIcon from '@material-ui/icons/Home';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    minHeight: 128,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n  },\n}));\n\nexport default function ProminentAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!localStorage.getItem('login_check')) {\n      history.push('login')\n    }\n    fetch('https://api.ipify.org/?format=json')\n      .then((e) => e.json())\n      .then((e) => e.ip)\n  })\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Check In/Out\n          </Typography>\n\n          {/* <IconButton aria-label=\"search\" color=\"inherit\" onClick={()=>history.push('')}>\n            <HomeIcon />\n          </IconButton> */}\n\n          <IconButton aria-label=\"search\" color=\"inherit\" onClick={() => {localStorage.clear();history.push('login')}}>\n            <ExitToAppIcon />\n          </IconButton>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useHistory } from 'react-router-dom';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    minHeight: 128,\n    alignItems: 'flex-start',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: 'flex-end',\n  },\n}));\n\nexport default function AddUsersAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch('https://api.ipify.org/?format=json')\n      .then((e) => e.json())\n      .then((e) => e.ip)\n  })\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Check In/Out\n          </Typography>\n\n          <IconButton aria-label=\"search\" color=\"inherit\" onClick={() => {localStorage.clear();history.push('login')}}>\n            <ExitToAppIcon />\n          </IconButton>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\ntry {\n    ReactDOM.render(<App />, document.getElementById('root'));\n} catch (error) {\n    localStorage.clear();\n    window.location.reload();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Users from \"./components/Users\";\nimport Login from \"./components/Login\";\nimport AddUsers from \"./components/AddUsers\";\nimport ProminentAppBar from \"./components/ProminentAppBar\";\nimport AddUsersAppBar from \"./components/AddUsersAppBar\";\n\nexport default function App() {\n\n  return (\n    <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/users\">\n            <AddUsersAppBar />\n            <Users />\n          </Route>\n          <Route path=\"/addusers\">\n            <AddUsersAppBar />\n            <AddUsers />\n          </Route>\n          <Route path=\"/\">\n            <ProminentAppBar />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}